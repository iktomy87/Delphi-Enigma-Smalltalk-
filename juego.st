Morph subclass: #EnemigoTablero	instanceVariableNames: 'position allPositions sprite'	classVariableNames: ''	poolDictionaries: ''	category: 'juego'!!EnemigoTablero methodsFor: 'initialization' stamp: 'Tomy 11/17/2024 07:06'!initializeAt: initialPosition    position := initialPosition.    sprite := self createSpriteAt: initialPosition withColor: Color red.! !!EnemigoTablero methodsFor: 'geometry' stamp: 'Tomy 11/17/2024 05:55'!position ^position! !!EnemigoTablero methodsFor: 'accessing' stamp: 'Tomy 11/17/2024 06:32'!createSpriteAt: aPosition withColor: aColor    | circle squareSize circlePosition |    squareSize := 640 // 4.    circlePosition := ((aPosition x * squareSize) @ (aPosition y * squareSize)) + ((squareSize // 2) @ (squareSize // 2)).    circle := EllipseMorph new.    circle color: aColor.    circle bounds: (circlePosition - ((squareSize // 4) @ (squareSize // 4)) corner: circlePosition + ((squareSize // 4) @ (squareSize // 4))).    ^circle.! !!EnemigoTablero methodsFor: 'accessing' stamp: 'Tomy 11/17/2024 06:37'!sprite^sprite! !Morph subclass: #JugadorTablero	instanceVariableNames: 'position sprite vidas'	classVariableNames: ''	poolDictionaries: ''	category: 'juego'!!JugadorTablero methodsFor: 'geometry' stamp: 'Tomy 11/17/2024 05:54'!position^position! !!JugadorTablero methodsFor: 'accessing' stamp: 'Tomy 11/17/2024 10:54'!vidas^vidas ifNil: [vidas := 1].! !!JugadorTablero methodsFor: 'accessing' stamp: 'Tomy 11/17/2024 06:37'!sprite^sprite! !!JugadorTablero methodsFor: 'accessing' stamp: 'Tomy 11/17/2024 07:14'!createSpriteAt: aPosition withColor: aColor    | circle squareSize circlePosition |    squareSize := 640 // 4.    circlePosition := ((aPosition x * squareSize) @ (aPosition y * squareSize)) + ((squareSize // 2) @ (squareSize // 2)).    circle := EllipseMorph new.    circle color: aColor.    circle bounds: (circlePosition - ((squareSize // 4) @ (squareSize // 4)) corner: circlePosition + ((squareSize // 4) @ (squareSize // 4))).    ^circle.! !!JugadorTablero methodsFor: 'accessing' stamp: 'Tomy 11/17/2024 08:53'!vidas: unaVidavidas:= unaVida! !!JugadorTablero methodsFor: 'initialization' stamp: 'Tomy 11/17/2024 11:57'!initializeAt: initialPosition		position:= initialPosition.		vidas:= 1.    sprite := self createSpriteAt: initialPosition withColor: Color blue.! !Morph subclass: #MainMenu	instanceVariableNames: 'background'	classVariableNames: ''	poolDictionaries: ''	category: 'juego'!!MainMenu methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 09:58'!playGame    "Mostrar el tablero y cerrar el men√∫"    Introduccion new openInWorld.    self delete.  "Cierra el men√∫ del juego"! !!MainMenu methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/8/2024 02:13'!createBackground    "Cargar y mostrar la imagen de fondo"    background:= ImageMorph new.    background image: (Form fromFileNamed: 'MainMenuWT.png').     background extent: 640 @ 640.	background bounds: (0 @ 0 corner: 640 @ 640).    self extent: 640 @ 640.  "Ajusta el tama√±o del men√∫"    self addMorph: background.! !!MainMenu methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/8/2024 02:25'!createButtons    | playButton exitButton |        "Bot√≥n Jugar"    playButton := SimpleButtonMorph new.    playButton label: 'Jugar'.	playButton color: Color black.		playButton extent: 100 @ 50.    playButton position: 270 @ 250.    playButton on: #mouseUp send: #playGame to: self.    self addMorph: playButton.    "Bot√≥n Salir"    exitButton := SimpleButtonMorph new.    exitButton label: 'Salir'.	exitButton color: Color black.	exitButton extent: 100 @ 50.    exitButton position: 270 @ 320.    exitButton on: #mouseUp send: #exitGame to: self.    self addMorph: exitButton.! !!MainMenu methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/8/2024 02:04'!exitGame    "Cerrar el men√∫ del juego"    self delete.! !!MainMenu methodsFor: 'initialization' stamp: 'TomasRodriguez 11/8/2024 02:02'!initialize    super initialize.    self extent: 400 @ 400.  "Tama√±o del men√∫"    self createBackground.    self createButtons.! !MainMenu subclass: #Introduccion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'juego'!!Introduccion methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 09:58'!playGame    "Mostrar el tablero y cerrar el men√∫"    Tablero new openInWorld.    self delete.  "Cierra el men√∫ del juego"! !!Introduccion methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 09:57'!createBackground    "Cargar y mostrar la imagen de fondo"    background:= ImageMorph new.    background image: (Form fromFileNamed: 'Introduccion.png').     background extent: 640 @ 640.	background bounds: (0 @ 0 corner: 640 @ 640).    self extent: 640 @ 640.  "Ajusta el tama√±o del men√∫"    self addMorph: background.! !!Introduccion methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 09:59'!createButtons    | continue |        "Bot√≥n Jugar"    continue := SimpleButtonMorph new.    continue label: 'Continuar'.	continue color: Color black.		continue extent: 100 @ 50.    continue position: 270 @ 350.    continue on: #mouseUp send: #playGame to: self.    self addMorph: continue.! !Morph subclass: #Tablero	instanceVariableNames: 'selectedEnemyPosition enemigos jugador capturedEnemies allEnemiesPos lastPosition'	classVariableNames: ''	poolDictionaries: ''	category: 'juego'!!Tablero methodsFor: 'as yet unclassified' stamp: 'Tomy 11/21/2024 04:01'!gameState    (jugador vidas <= 0) ifTrue: [        Transcript show: 'Game Over: Vidas agotadas.'; cr.        GameOver new openInWorld.        self delete.        ^self.  "Terminar ejecución aquí"    ].    (jugador vidas >= 15) ifTrue: [        Transcript show: 'Has ganado el juego: 15 vidas alcanzadas.'; cr.        WinScreen new openInWorld.        self delete.        ^self.  "Terminar ejecución aquí"    ].    Transcript show: 'El juego continúa: Vidas actuales: ', jugador vidas printString; cr.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 08:18'!adjacentPositionsTo: position      "Devuelve una colecci√≥n de posiciones adyacentes v√°lidas en el tablero."    ^ {(position + (2 @ 0)). "Derecha"       (position + (-2 @ 0)). "Izquierda"       (position + (0 @ 2)). "Abajo"       (position + (0 @ -2))} "Arriba"    select: [:pos |         (pos x between: 0 and: 3) and: (pos y between: 0 and: 3)].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'Tomy 11/21/2024 03:48'!startRandomGame    | randomChoice quiz space spacePuntaje carrera carreraPuntaje|    randomChoice := #(#Quiz #SpaceInvaders Juego_Carreras) atRandom.    randomChoice caseOf: {        [#Quiz] -> [            quiz := Quiz new.            quiz iniciar.            self endGameWithScore: quiz puntaje.            self takeKeyboardFocus.  "Restablecer foco al tablero después del quiz"				self gameState.        ].        [#SpaceInvaders] -> [            space := SpaceInvaders new.            space iniciarSI.  "Inicia el juego de Space Invaders"            space takeKeyboardFocus.  "Dar foco a Space Invaders"				space whenGameEndsDo: [                Transcript show: 'Puntaje final de Space Invaders: ', space puntaje asString; cr.						spacePuntaje:= space puntaje.                self endGameWithScore: spacePuntaje.                self takeKeyboardFocus.             ].			Transcript show: 'Puntaje final de Space Invaders: ', space puntaje asString; cr.          self takeKeyboardFocus.         ].		  [#Juego_Carreras] -> [            carrera  := Juego_Carreras new.            carrera openInWorld.  "Inicia el juego de Space Invaders"            carrera takeKeyboardFocus.  "Dar foco a Space Invaders"				carrera whenGameEndsDo: [                Transcript show: 'Puntaje final de Space Invaders: ', carrera puntaje asString; cr.						carreraPuntaje:= carrera puntaje.                self endGameWithScore: carreraPuntaje.                self takeKeyboardFocus.             ].			Transcript show: 'Puntaje final de Space Invaders: ', carrera puntaje asString; cr.          self takeKeyboardFocus.         ].    } otherwise: [].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'Tomy 11/21/2024 10:51'!endGameWithScore: score    | adjacentEnemies notCaptured SUMA |    SUMA := jugador vidas.    Transcript show: 'Puntaje obtenido: ', score printString; cr.    Transcript show: 'Vidas iniciales: ', SUMA printString; cr.    "Actualizar vidas basado en el puntaje"    (score >= 12) ifTrue: [        Transcript show: 'Coloreando enemigo en posición: ', selectedEnemyPosition printString; cr.                "Colorear enemigo y agregarlo a capturados"        self colorEnemy: selectedEnemyPosition to: Color blue.        capturedEnemies add: selectedEnemyPosition.		  lastPosition:= selectedEnemyPosition.		  allEnemiesPos remove: selectedEnemyPosition.        "Incrementar las vidas del jugador"        jugador vidas: jugador vidas + 1.        Transcript show: 'Vidas incrementadas: ', jugador vidas printString; cr.        "Obtener posiciones adyacentes y filtrar enemigos no capturados"        adjacentEnemies := self adjacentPositionsTo: selectedEnemyPosition.        notCaptured := adjacentEnemies select: [:pos |             (allEnemiesPos includes: pos) and: (capturedEnemies includes: pos) not        ].        "Seleccionar el primer enemigo no capturado y cambiar su color a verde"        notCaptured isEmpty ifFalse: [            selectedEnemyPosition := notCaptured first.            Transcript show: 'Nuevo enemigo seleccionado en posición: ', selectedEnemyPosition printString; cr.            self colorEnemy: selectedEnemyPosition to: Color green.        ].    ] ifFalse: [        "Decrementar las vidas del jugador si el puntaje no es suficiente"        jugador vidas: jugador vidas - 1.        Transcript show: 'Vidas decrementadas: ', jugador vidas printString; cr.		  self colorEnemy: lastPosition to: Color red.		  capturedEnemies size > 1 ifTrue: [ capturedEnemies remove: lastPosition. allEnemiesPos add: lastPosition.].    ].    "Recuperar el foco al tablero"    self takeKeyboardFocus.    Transcript show: 'Foco restablecido en el tablero'; cr.    "Verificar el estado del juego después de actualizar las vidas"    self gameState.! !!Tablero methodsFor: 'as yet unclassified' stamp: 'Tomy 11/21/2024 10:49'!moveSelection: direction    | newSelectedPosition |    newSelectedPosition := selectedEnemyPosition + direction.    Transcript show: 'Intentando mover a: ', newSelectedPosition printString; cr.    (((newSelectedPosition x between: 0 and: 3) and: (newSelectedPosition y between: 0 and: 3))         and: (allEnemiesPos includes: newSelectedPosition)) ifTrue: [                "Restaurar color del enemigo previo"        Transcript show: 'Restaurando color en posici√≥n: ', selectedEnemyPosition printString; cr.        self colorEnemy: selectedEnemyPosition to: Color red.                newSelectedPosition = (jugador position) ifFalse: [          selectedEnemyPosition := newSelectedPosition.        Transcript show: 'Nuevo enemigo seleccionado en: ', selectedEnemyPosition printString; cr.        self colorEnemy: selectedEnemyPosition to: Color green.			].    ].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'Tomy 11/21/2024 17:45'!adjacentEnemy    | adjacentEnemies |    adjacentEnemies := self adjacentPositionsTo: jugador position.    "Verificamos si alguna de las posiciones adyacentes tiene un enemigo"    ^ adjacentEnemies detect: [:pos | allEnemiesPos includes: pos] ifNone: [nil].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/8/2024 01:35'!createSquares    | squareSize squareColor square creamColor |    squareSize := self width // 4.  "Deber√≠a ser 100 si width es 400"        "Definir el color crema"    creamColor := Color r: 1.0 g: 0.95 b: 0.8.        0 to: 3 do: [ :row |        0 to: 3 do: [ :col |            "Determinar color en base a la paridad de la fila y columna"            squareColor := ((row + col) even) ifTrue: [Color veryLightGray] ifFalse: [creamColor].                        "Crear y configurar cada cuadrado"            square := Morph new.            square color: squareColor.                        "Establecer los l√≠mites de cada cuadrado"            square bounds: ((col * squareSize) @ (row * squareSize) extent: (squareSize @ squareSize)).                        "Agregar cuadrado al tablero"            self addMorph: square        ]    ].! !!Tablero methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 06:31'!colorEnemy: position to: aColor    | enemy |    enemy := enemigos detect: [:e | e position = position] ifNone: [nil].    enemy ifNotNil: [enemy sprite color: aColor].! !!Tablero methodsFor: 'initialize-release' stamp: 'Tomy 11/21/2024 04:00'!terminateProcess Process allInstances do: [:each |    each suspendedContext ifNotNil: [        | receiver |        receiver := each suspendedContext receiver.        (receiver notNil and: [            (receiver class name = 'DelaySemaphoreScheduler')             or: [receiver class name = 'Delay']        ]) ifTrue: [            each terminate.        ].    ].].! !!Tablero methodsFor: 'initialization' stamp: 'Tomy 11/21/2024 10:55'!initialize    | cream randomPosition|    super initialize.    cream := Color r: 1.0 g: 0.95 b: 0.8.    self color: cream.    self extent: 640@640. "Tamaño del tablero"    randomPosition:= (0 to: 3) atRandom @ (0 to: 3) atRandom.    jugador := JugadorTablero new initializeAt: randomPosition.    self createSquares.    self addMorph: jugador sprite.		    enemigos := self initializeEnemies.    capturedEnemies := OrderedCollection new.	allEnemiesPos:= OrderedCollection new.	capturedEnemies add: jugador position.    enemigos do: [:enemy | self addMorph: enemy sprite. allEnemiesPos add: enemy position].    selectedEnemyPosition := self adjacentEnemy.    selectedEnemyPosition ifNotNil: [self colorEnemy: selectedEnemyPosition to: Color green].	Transcript show: jugador vidas.    self takeKeyboardFocus.! !!Tablero methodsFor: 'event handling' stamp: 'Tomy 11/17/2024 09:17'!handleKeystroke: anEvent    Transcript show: 'Tecla presionada: ', anEvent keyValue printString; cr.    anEvent keyValue caseOf: {        [28] -> [self moveSelection: (-1 @ 0)].  "Izquierda"        [30] -> [self moveSelection: (0 @ -1)].  "Arriba"        [29] -> [self moveSelection: (1 @ 0)].   "Derecha"        [31] -> [self moveSelection: (0 @ 1)].   "Abajo"        [13] -> [            (allEnemiesPos includes: selectedEnemyPosition) ifTrue: [                self startRandomGame.                "Recuperar el enfoque en el tablero después de ejecutar el juego"                self takeKeyboardFocus.            ].        ]  "Enter para iniciar el juego si hay un enemigo seleccionado"    } otherwise: [].! !!Tablero methodsFor: 'adding' stamp: 'Tomy 11/17/2024 08:27'!initializeEnemies    | allPositions selectedPosition|    allPositions := (0 to: 3) flatCollect: [:row |         (0 to: 3) collect: [:col | row @ col]    ].    selectedPosition:= allPositions reject: [:pos | pos = jugador position].	 ^selectedPosition collect: [:pos |        EnemigoTablero new initializeAt: pos    ].! !MainMenu subclass: #WinScreen	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'juego'!!WinScreen methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 10:33'!playGame    "Mostrar el tablero y cerrar el men√∫"    Tablero new openInWorld.    self delete.  "Cierra el men√∫ del juego"! !!WinScreen methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 09:04'!createBackground    "Cargar y mostrar la imagen de fondo"    background:= ImageMorph new.    background image: (Form fromFileNamed: 'WinScreen.png').     background extent: 640 @ 640.	background bounds: (0 @ 0 corner: 640 @ 640).    self extent: 640 @ 640.  "Ajusta el tama√±o del men√∫"    self addMorph: background.! !!WinScreen methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 20:05'!createButtons    | playButton exitButton |        "Bot√≥n Jugar"    playButton := SimpleButtonMorph new.    playButton label: 'Jugar de nuevo'.	playButton color: Color black.		playButton extent: 100 @ 50.    playButton position: 270 @ 350.    playButton on: #mouseUp send: #playGame to: self.    self addMorph: playButton.    "Bot√≥n Salir"    exitButton := SimpleButtonMorph new.    exitButton label: 'Salir'.	exitButton color: Color black.	exitButton extent: 100 @ 50.    exitButton position: 270 @ 420.    exitButton on: #mouseUp send: #exitGame to: self.    self addMorph: exitButton.! !!WinScreen methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 09:05'!exitGame    "Cerrar el men√∫ del juego"    self delete.! !WinScreen subclass: #GameOver	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'juego'!!GameOver methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 20:05'!createBackground    "Cargar y mostrar la imagen de fondo"    background:= ImageMorph new.    background image: (Form fromFileNamed: 'GameOver.png').     background extent: 640 @ 640.	background bounds: (0 @ 0 corner: 640 @ 640).    self extent: 640 @ 640.  "Ajusta el tama√±o del men√∫"    self addMorph: background.! !