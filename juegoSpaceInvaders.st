Morph subclass: #Disparo	instanceVariableNames: 'velocidadProyectil'	classVariableNames: ''	poolDictionaries: ''	category: 'juegoSpaceInvaders'!!Disparo methodsFor: 'as yet unclassified' stamp: 'Tomas 11/15/2024 00:01'!moverself position: (self position + (0 @ -4)). self changed: #bounds.  ! !!Disparo methodsFor: 'initialization' stamp: 'Tomas 11/14/2024 23:58'!initialize         super initialize.        self color: Color blue.        self extent: 5 @ 10.		  velocidadProyectil := 6. ! !Morph subclass: #Invasor	instanceVariableNames: 'velocidad sprite rangoMovimiento posicionInicial'	classVariableNames: ''	poolDictionaries: ''	category: 'juegoSpaceInvaders'!!Invasor methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/12/2024 03:38'!createSprite    "Cargar y mostrar la imagen de fondo"    sprite:= ImageMorph new.    sprite image: (Form fromFileNamed: 'SIEnemy.png').     sprite extent: 20 @ 10.    self addMorph: sprite.! !!Invasor methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/12/2024 03:53'!cambiarPosicion: posicion	self position: self position + posicion! !!Invasor methodsFor: 'initialization' stamp: 'Tomas 11/15/2024 04:12'!initialize         super initialize.        self createSprite.		  self color: Color transparent.        self extent: 15 @ 10.        self position: -70 @ 50. "Posici‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ‚Äö√Ñ√∂‚àö¬¢‚Äö√Ñ¬¢n inicial de un invasor"        velocidad := 2.		rangoMovimiento := 80.		posicionInicial:= self position x.! !Morph subclass: #Piloto	instanceVariableNames: 'sprite proyectiles'	classVariableNames: ''	poolDictionaries: ''	category: 'juegoSpaceInvaders'!!Piloto methodsFor: 'as yet unclassified' stamp: 'Tomas 11/14/2024 08:31'!disparar     | disparo |    disparo := Disparo new mover.    disparo position: self position + (7 @ 10).	(disparo position y < 0) ifTrue: [ self proyectiles remove: disparo ifAbsent: []. "Eliminar de la colecci‚àö‚â•n del jugador" 		disparo delete. "Eliminar disparos fuera de la pantalla" 		Transcript show: 'Disparo eliminado por salir de los l‚àö‚â†mites en ', self position asString; cr. ]. 	Transcript show: 'Disparo movido a ', self position asString; cr. 	proyectiles add: disparo.    self owner addMorph: disparo.! !!Piloto methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/12/2024 03:31'!actualizarproyectiles do: [ : proyectil | proyectil mover.	 ].! !!Piloto methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/12/2024 03:39'!createSprite    "Cargar y mostrar la imagen de fondo"    sprite:= ImageMorph new.    sprite image: (Form fromFileNamed: 'SIPlayer.png').     sprite extent: 20 @ 10.    self addMorph: sprite.! !!Piloto methodsFor: 'as yet unclassified' stamp: 'Tomas 11/14/2024 08:26'!mover: direction    | newSelectedPosition |    newSelectedPosition := self position + direction.	self position: newSelectedPosition.		self changed: #bounds.! !!Piloto methodsFor: 'accessing' stamp: 'TomasRodriguez 11/12/2024 04:08'!proyectiles^proyectiles! !!Piloto methodsFor: 'initialization' stamp: 'Tomas 11/15/2024 02:22'!initialize	super initialize.	self color: Color transparent.        self createSprite.        self position: 300 @ 450. 	proyectiles:= OrderedCollection new.! !Morph subclass: #SpaceInvaders	instanceVariableNames: 'jugador invasores disparosJugador background puntaje margenDerecho gameOver gameEndCallback'	classVariableNames: ''	poolDictionaries: ''	category: 'juegoSpaceInvaders'!!SpaceInvaders methodsFor: 'accessing' stamp: 'Tomas 11/16/2024 21:21'!gameOver^gameOver! !!SpaceInvaders methodsFor: 'accessing' stamp: 'Tomas 11/15/2024 02:39'!puntaje^puntaje! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'Tomas 11/15/2024 02:44'!desplazarInvasores    [        [            invasores do: [:invader |                 | desplazamientoY |                desplazamientoY := 4. "Desplazamiento hacia abajo"                invader position: invader position + (0 @ desplazamientoY).            ].            (Delay forSeconds: 1) wait.  "Ajuste la velocidad de movimiento"        ] repeat    ] fork.! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'Tomy 11/12/2024 19:34'!crearFilaInvasoresEn: posicionInicial conCantidad: cantidad desplazamiento: desplazamiento     | posicionActual |    posicionActual := posicionInicial.  "Crear una variable local para almacenar la posici‚Äö√†√∂‚Äö√¢‚Ä¢n actual"        cantidad timesRepeat: [        | invader |        invader := Invasor new.        invader cambiarPosicion: posicionActual.        invasores add: invader.        self addMorph: invader.        posicionActual := posicionActual + desplazamiento.  "Actualizar la posici‚Äö√†√∂‚Äö√¢‚Ä¢n actual"    ].! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'Tomas 11/15/2024 07:20'!updateGame jugador proyectiles do: [:disparo |	 disparo ifNotNil: [        disparo mover.        self detectarColision.    ].		].self changed: #bounds.! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'Tomas 11/16/2024 21:27'!terminarJuego    gameOver ifTrue: [^self].  "Evita ejecuci√≥n repetida"    gameOver := true.  "Marca el juego como terminado"	    gameEndCallback ifNotNil: [gameEndCallback value].    "Mostrar el puntaje una sola vez"    UIManager default inform: 'Your score is: ', puntaje asString.    "Limpiar objetos"    jugador proyectiles do: [ :disparo | disparo delete ].    jugador delete.    	self owner ifNotNil: [        self owner takeKeyboardFocus.        Transcript show: 'Focus restaurado en el tablero'; cr.    ].    self delete.! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/12/2024 02:21'!createBackground    "Cargar y mostrar la imagen de fondo"    background:= ImageMorph new.    background image: (Form fromFileNamed: 'SIBackground.png').     background extent: 640 @ 640.	background bounds: (0 @ 0 corner: 640 @ 640).    self extent: 640 @ 640.  "Ajusta el tama‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ¬¨¬®¬¨¬±o del men‚Äö√Ñ√∂‚àö‚Ä†‚àö‚àÇ‚Äö√Ñ√∂‚àö‚Ä†¬¨¬•"    self addMorph: background.! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'TomasRodriguez 11/12/2024 02:46'!handlesKeyboard    ^ true! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'Tomas 11/16/2024 21:06'!detectarColision    | disparosAEliminar invasoresAEliminar bounds_bala bounds_invader |	jugador ifNil: [^self].    disparosAEliminar := OrderedCollection new.    invasoresAEliminar := OrderedCollection new.        "Define un margen adicional hacia la derecha"    margenDerecho := 50. "Ajusta este valor seg‚àö‚à´n el ‚àö¬∞rea extra que quieras detectar"    jugador proyectiles do: [:disparo |        bounds_bala := disparo bounds.        invasores do: [:invader |            bounds_invader := invader bounds.            "Expande el l‚àö‚â†mite derecho del invasor para ampliar el ‚àö¬∞rea de colisi‚àö‚â•n"            ((bounds_bala right >= bounds_invader left and: [bounds_bala left <= (bounds_invader right + margenDerecho)])                and: [(bounds_bala bottom >= bounds_invader top and: [bounds_bala top <= bounds_invader bottom])])                ifTrue: [                    disparosAEliminar add: disparo.                    invasoresAEliminar add: invader.                    puntaje := puntaje + 1.                ].        ].    ].    "Eliminar todos los disparos e invasores detectados de una vez"    jugador proyectiles removeAll: disparosAEliminar.    disparosAEliminar do: [:disparo |        disparo delete. "Eliminar de la vista"    ].    invasores removeAll: invasoresAEliminar.    invasoresAEliminar do: [:invader |        invader delete. "Eliminar de la vista"    ].    "Paso opcional: Limpiar variables temporales"    disparosAEliminar := nil.    invasoresAEliminar := nil.! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'Tomy 11/17/2024 12:27'!detectarColisionJugador    |  bounds_jugador |jugador ifNil: [^self].	margenDerecho:= 50.    bounds_jugador := jugador bounds.  "Obtenemos las coordenadas y el tama‚àö¬±o del jugador"        "Verificar si alg‚àö‚à´n invasor toca al jugador"    invasores do: [ :invader |        | bounds_invader |        bounds_invader := invader bounds.                ((bounds_jugador right >= bounds_invader left and: [bounds_jugador left <= (bounds_invader right + margenDerecho)])                and: [(bounds_jugador bottom >= bounds_invader top and: [bounds_jugador top <= bounds_invader bottom])])                ifTrue: [ 	self terminarJuego.			].]! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'Tomas 11/16/2024 20:52'!verificarPuntaje    (puntaje >= 12 and: gameOver not) ifTrue: [        self terminarJuego.    ].! !!SpaceInvaders methodsFor: 'as yet unclassified' stamp: 'Tomas 11/16/2024 20:59'!iniciarSI    "Inicializar el estado del juego"    gameOver := false.  "Bandera para controlar el estado del juego"           "Iniciar el desplazamiento de invasores en un hilo separado"	 self takeKeyboardFocus.    self desplazarInvasores.        "Ciclo principal del juego"    [        [				 self takeKeyboardFocus.            self detectarColision.            self detectarColisionJugador.				self verificarPuntaje.            self updateGame.            (Delay forMilliseconds: 40) wait.        ] repeat    ] fork.! !!SpaceInvaders methodsFor: 'event handling' stamp: 'Tomas 11/16/2024 21:05'!handleKeystroke: anEvent    anEvent keyValue caseOf: {        [28] -> [jugador mover: (-6 @ 0)].  "Izquierda"        [29] -> [jugador mover: (6 @ 0)].   "Derecha"			[30] -> [jugador disparar].  "Arriba"    } otherwise: [].! !!SpaceInvaders methodsFor: 'enumerating' stamp: 'Tomas 11/16/2024 21:25'!whenGameEndsDo: aBlock    gameEndCallback := aBlock.! !!SpaceInvaders methodsFor: 'initialization' stamp: 'Tomas 11/16/2024 20:50'!initialize     | posicionArriba posicionAbajo |    super initialize.	self takeKeyboardFocus.        "Configurar la ventana del juego y abrirla en el mundo"    self extent: 640 @ 640.    self createBackground.    self openInWorld.    "Colecciones de invasores y disparos"    invasores := OrderedCollection new.    disparosJugador := OrderedCollection new.	puntaje:= 0.	gameOver:= false.    "Inicializar el jugador y agregarlo al mundo"    jugador := Piloto new.    self addMorph: jugador.    self takeKeyboardFocus.    "Posiciones iniciales para los invasores"    posicionArriba := 100 @ 0.    posicionAbajo := 100 @ 100.    "Agregar invasores en filas usando m‚Äö√†√∂¬¨¬©todos de configuraci‚Äö√†√∂‚Äö√¢‚Ä¢n"    self crearFilaInvasoresEn: posicionArriba conCantidad: 6 desplazamiento: 100 @ 0.    self crearFilaInvasoresEn: posicionAbajo conCantidad: 6 desplazamiento: 100 @ 0.    "Iniciar el juego y actualizar continuamente"    self iniciarSI.	self detectarColision.	self detectarColisionJugador.! !